{"ast":null,"code":"var _jsxFileName = \"/Users/thitiwutphophan/shop/src/contexts/BagContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { getRandomPets } from '../data/pets';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BagContext = /*#__PURE__*/createContext(undefined);\nexport const useBag = () => {\n  _s();\n  const context = useContext(BagContext);\n  if (context === undefined) {\n    throw new Error('useBag must be used within a BagProvider');\n  }\n  return context;\n};\n_s(useBag, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const BagProvider = ({\n  children\n}) => {\n  _s2();\n  const {\n    user\n  } = useAuth();\n  const [userBag, setUserBag] = useState(null);\n\n  // Load bag from localStorage when user changes\n  useEffect(() => {\n    if (user) {\n      const savedBag = localStorage.getItem(`userBag_${user.id}`);\n      if (savedBag) {\n        const parsedBag = JSON.parse(savedBag);\n        // Convert date strings back to Date objects\n        parsedBag.petBoxes = parsedBag.petBoxes.map(box => ({\n          ...box,\n          purchaseDate: new Date(box.purchaseDate)\n        }));\n        setUserBag(parsedBag);\n      } else {\n        // Create new bag for user\n        setUserBag({\n          userId: user.id,\n          petBoxes: [],\n          pets: []\n        });\n      }\n    } else {\n      setUserBag(null);\n    }\n  }, [user]);\n\n  // Save bag to localStorage whenever it changes\n  useEffect(() => {\n    if (userBag && user) {\n      localStorage.setItem(`userBag_${user.id}`, JSON.stringify(userBag));\n    }\n  }, [userBag, user]);\n  const addPetBoxes = (productId, productName, quantity) => {\n    if (!userBag) return;\n    const newBoxes = [];\n    for (let i = 0; i < quantity; i++) {\n      newBoxes.push({\n        id: `${productId}_${Date.now()}_${i}`,\n        productId,\n        productName,\n        purchaseDate: new Date(),\n        isOpened: false\n      });\n    }\n    setUserBag(prev => prev ? {\n      ...prev,\n      petBoxes: [...prev.petBoxes, ...newBoxes]\n    } : null);\n  };\n  const openPetBox = async boxId => {\n    if (!userBag) throw new Error('No bag found');\n\n    // Find the box\n    const boxIndex = userBag.petBoxes.findIndex(box => box.id === boxId);\n    if (boxIndex === -1) throw new Error('Box not found');\n    if (userBag.petBoxes[boxIndex].isOpened) {\n      throw new Error('Box already opened');\n    }\n\n    // Generate random pet\n    const randomPets = getRandomPets(1);\n    const pet = randomPets[0];\n\n    // Update the box and add pet to collection\n    const updatedBag = {\n      ...userBag,\n      petBoxes: userBag.petBoxes.map((box, index) => index === boxIndex ? {\n        ...box,\n        isOpened: true,\n        pet\n      } : box),\n      pets: [...userBag.pets, pet]\n    };\n    setUserBag(updatedBag);\n    return pet;\n  };\n  const getUnopenedBoxes = () => {\n    return (userBag === null || userBag === void 0 ? void 0 : userBag.petBoxes.filter(box => !box.isOpened)) || [];\n  };\n  const getOpenedBoxes = () => {\n    return (userBag === null || userBag === void 0 ? void 0 : userBag.petBoxes.filter(box => box.isOpened)) || [];\n  };\n  const getAllPets = () => {\n    return (userBag === null || userBag === void 0 ? void 0 : userBag.pets) || [];\n  };\n  const clearBag = () => {\n    setUserBag(null);\n    if (user) {\n      localStorage.removeItem(`userBag_${user.id}`);\n    }\n  };\n  const value = {\n    userBag,\n    addPetBoxes,\n    openPetBox,\n    getUnopenedBoxes,\n    getOpenedBoxes,\n    getAllPets,\n    clearBag\n  };\n  return /*#__PURE__*/_jsxDEV(BagContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s2(BagProvider, \"rw41eZGm9Idlk19iG6CX5BOTiHE=\", false, function () {\n  return [useAuth];\n});\n_c = BagProvider;\nvar _c;\n$RefreshReg$(_c, \"BagProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","getRandomPets","useAuth","jsxDEV","_jsxDEV","BagContext","undefined","useBag","_s","context","Error","BagProvider","children","_s2","user","userBag","setUserBag","savedBag","localStorage","getItem","id","parsedBag","JSON","parse","petBoxes","map","box","purchaseDate","Date","userId","pets","setItem","stringify","addPetBoxes","productId","productName","quantity","newBoxes","i","push","now","isOpened","prev","openPetBox","boxId","boxIndex","findIndex","randomPets","pet","updatedBag","index","getUnopenedBoxes","filter","getOpenedBoxes","getAllPets","clearBag","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/thitiwutphophan/shop/src/contexts/BagContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { UserBag, PetBox, Pet } from '../types';\nimport { getRandomPets } from '../data/pets';\nimport { useAuth } from './AuthContext';\n\ninterface BagContextType {\n  userBag: UserBag | null;\n  addPetBoxes: (productId: string, productName: string, quantity: number) => void;\n  openPetBox: (boxId: string) => Promise<Pet>;\n  getUnopenedBoxes: () => PetBox[];\n  getOpenedBoxes: () => PetBox[];\n  getAllPets: () => Pet[];\n  clearBag: () => void;\n}\n\nconst BagContext = createContext<BagContextType | undefined>(undefined);\n\nexport const useBag = () => {\n  const context = useContext(BagContext);\n  if (context === undefined) {\n    throw new Error('useBag must be used within a BagProvider');\n  }\n  return context;\n};\n\ninterface BagProviderProps {\n  children: ReactNode;\n}\n\nexport const BagProvider: React.FC<BagProviderProps> = ({ children }) => {\n  const { user } = useAuth();\n  const [userBag, setUserBag] = useState<UserBag | null>(null);\n\n  // Load bag from localStorage when user changes\n  useEffect(() => {\n    if (user) {\n      const savedBag = localStorage.getItem(`userBag_${user.id}`);\n      if (savedBag) {\n        const parsedBag = JSON.parse(savedBag);\n        // Convert date strings back to Date objects\n        parsedBag.petBoxes = parsedBag.petBoxes.map((box: any) => ({\n          ...box,\n          purchaseDate: new Date(box.purchaseDate)\n        }));\n        setUserBag(parsedBag);\n      } else {\n        // Create new bag for user\n        setUserBag({\n          userId: user.id,\n          petBoxes: [],\n          pets: []\n        });\n      }\n    } else {\n      setUserBag(null);\n    }\n  }, [user]);\n\n  // Save bag to localStorage whenever it changes\n  useEffect(() => {\n    if (userBag && user) {\n      localStorage.setItem(`userBag_${user.id}`, JSON.stringify(userBag));\n    }\n  }, [userBag, user]);\n\n  const addPetBoxes = (productId: string, productName: string, quantity: number) => {\n    if (!userBag) return;\n\n    const newBoxes: PetBox[] = [];\n    for (let i = 0; i < quantity; i++) {\n      newBoxes.push({\n        id: `${productId}_${Date.now()}_${i}`,\n        productId,\n        productName,\n        purchaseDate: new Date(),\n        isOpened: false\n      });\n    }\n\n    setUserBag(prev => prev ? {\n      ...prev,\n      petBoxes: [...prev.petBoxes, ...newBoxes]\n    } : null);\n  };\n\n  const openPetBox = async (boxId: string): Promise<Pet> => {\n    if (!userBag) throw new Error('No bag found');\n\n    // Find the box\n    const boxIndex = userBag.petBoxes.findIndex(box => box.id === boxId);\n    if (boxIndex === -1) throw new Error('Box not found');\n\n    if (userBag.petBoxes[boxIndex].isOpened) {\n      throw new Error('Box already opened');\n    }\n\n    // Generate random pet\n    const randomPets = getRandomPets(1);\n    const pet = randomPets[0];\n\n    // Update the box and add pet to collection\n    const updatedBag = {\n      ...userBag,\n      petBoxes: userBag.petBoxes.map((box, index) => \n        index === boxIndex \n          ? { ...box, isOpened: true, pet }\n          : box\n      ),\n      pets: [...userBag.pets, pet]\n    };\n\n    setUserBag(updatedBag);\n    return pet;\n  };\n\n  const getUnopenedBoxes = (): PetBox[] => {\n    return userBag?.petBoxes.filter(box => !box.isOpened) || [];\n  };\n\n  const getOpenedBoxes = (): PetBox[] => {\n    return userBag?.petBoxes.filter(box => box.isOpened) || [];\n  };\n\n  const getAllPets = (): Pet[] => {\n    return userBag?.pets || [];\n  };\n\n  const clearBag = () => {\n    setUserBag(null);\n    if (user) {\n      localStorage.removeItem(`userBag_${user.id}`);\n    }\n  };\n\n  const value = {\n    userBag,\n    addPetBoxes,\n    openPetBox,\n    getUnopenedBoxes,\n    getOpenedBoxes,\n    getAllPets,\n    clearBag\n  };\n\n  return (\n    <BagContext.Provider value={value}>\n      {children}\n    </BagContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}