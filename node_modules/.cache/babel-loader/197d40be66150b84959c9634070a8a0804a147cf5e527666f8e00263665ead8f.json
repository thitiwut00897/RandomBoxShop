{"ast":null,"code":"import _objectSpread from\"/Users/thitiwutphophan/shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect}from'react';import{petService}from'../services/petService';import{useAuth}from'./AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";const BagContext=/*#__PURE__*/createContext(undefined);export const useBag=()=>{const context=useContext(BagContext);if(context===undefined){throw new Error('useBag must be used within a BagProvider');}return context;};export const BagProvider=_ref=>{let{children}=_ref;const{user}=useAuth();const[userBag,setUserBag]=useState(null);// Initialize pets from API when the provider mounts\nuseEffect(()=>{petService.initialize().catch(error=>{console.error('Failed to initialize pets:',error);});},[]);// Load bag from localStorage when user changes\nuseEffect(()=>{if(user){const savedBag=localStorage.getItem(\"userBag_\".concat(user.id));if(savedBag){const parsedBag=JSON.parse(savedBag);// Convert date strings back to Date objects\nparsedBag.petBoxes=parsedBag.petBoxes.map(box=>_objectSpread(_objectSpread({},box),{},{purchaseDate:new Date(box.purchaseDate)}));setUserBag(parsedBag);}else{// Create new bag for user\nsetUserBag({userId:user.id,petBoxes:[],pets:[]});}}else{setUserBag(null);}},[user]);// Save bag to localStorage whenever it changes\nuseEffect(()=>{if(userBag&&user){localStorage.setItem(\"userBag_\".concat(user.id),JSON.stringify(userBag));}},[userBag,user]);const addPetBoxes=(productId,productName,quantity)=>{if(!userBag)return;const newBoxes=[];for(let i=0;i<quantity;i++){newBoxes.push({id:\"\".concat(productId,\"_\").concat(Date.now(),\"_\").concat(i),productId,productName,purchaseDate:new Date(),isOpened:false});}setUserBag(prev=>prev?_objectSpread(_objectSpread({},prev),{},{petBoxes:[...prev.petBoxes,...newBoxes]}):null);};const openPetBox=async boxId=>{if(!userBag){throw new Error('No bag found');}const box=userBag.petBoxes.find(b=>b.id===boxId);if(!box){throw new Error('Box not found');}if(box.isOpened){throw new Error('Box already opened');}// Get a random pet\nconst randomPets=petService.getRandomPets(1);const pet=randomPets[0];// Update the bag\nconst updatedBag=_objectSpread(_objectSpread({},userBag),{},{petBoxes:userBag.petBoxes.map(b=>b.id===boxId?_objectSpread(_objectSpread({},b),{},{isOpened:true,openedAt:new Date()}):b),pets:[...userBag.pets,pet]});setUserBag(updatedBag);localStorage.setItem(\"userBag_\".concat(user===null||user===void 0?void 0:user.id),JSON.stringify(updatedBag));return pet;};const getRandomPet=()=>{const randomPets=petService.getRandomPets(1);return randomPets[0];};const addPetToCollection=(pet,boxId)=>{if(!userBag){throw new Error('No bag found');}const updatedBag=_objectSpread(_objectSpread({},userBag),{},{petBoxes:userBag.petBoxes.map(b=>b.id===boxId?_objectSpread(_objectSpread({},b),{},{isOpened:true,openedAt:new Date()}):b),pets:[...userBag.pets,pet]});setUserBag(updatedBag);localStorage.setItem(\"userBag_\".concat(user===null||user===void 0?void 0:user.id),JSON.stringify(updatedBag));};const getUnopenedBoxes=()=>{return(userBag===null||userBag===void 0?void 0:userBag.petBoxes.filter(box=>!box.isOpened))||[];};const getOpenedBoxes=()=>{return(userBag===null||userBag===void 0?void 0:userBag.petBoxes.filter(box=>box.isOpened))||[];};const getAllPets=()=>{return(userBag===null||userBag===void 0?void 0:userBag.pets)||[];};const clearBag=()=>{setUserBag(null);if(user){localStorage.removeItem(\"userBag_\".concat(user.id));}};const value={userBag,addPetBoxes,openPetBox,getRandomPet,addPetToCollection,getUnopenedBoxes,getOpenedBoxes,getAllPets,clearBag};return/*#__PURE__*/_jsx(BagContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","petService","useAuth","jsx","_jsx","BagContext","undefined","useBag","context","Error","BagProvider","_ref","children","user","userBag","setUserBag","initialize","catch","error","console","savedBag","localStorage","getItem","concat","id","parsedBag","JSON","parse","petBoxes","map","box","_objectSpread","purchaseDate","Date","userId","pets","setItem","stringify","addPetBoxes","productId","productName","quantity","newBoxes","i","push","now","isOpened","prev","openPetBox","boxId","find","b","randomPets","getRandomPets","pet","updatedBag","openedAt","getRandomPet","addPetToCollection","getUnopenedBoxes","filter","getOpenedBoxes","getAllPets","clearBag","removeItem","value","Provider"],"sources":["/Users/thitiwutphophan/shop/src/contexts/BagContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { UserBag, PetBox, Pet } from '../types';\nimport { petService } from '../services/petService';\nimport { useAuth } from './AuthContext';\n\ninterface BagContextType {\n  userBag: UserBag | null;\n  addPetBoxes: (productId: string, productName: string, quantity: number) => void;\n  openPetBox: (boxId: string) => Promise<Pet>;\n  getRandomPet: () => Pet;\n  addPetToCollection: (pet: Pet, boxId: string) => void;\n  getUnopenedBoxes: () => PetBox[];\n  getOpenedBoxes: () => PetBox[];\n  getAllPets: () => Pet[];\n  clearBag: () => void;\n}\n\nconst BagContext = createContext<BagContextType | undefined>(undefined);\n\nexport const useBag = () => {\n  const context = useContext(BagContext);\n  if (context === undefined) {\n    throw new Error('useBag must be used within a BagProvider');\n  }\n  return context;\n};\n\ninterface BagProviderProps {\n  children: ReactNode;\n}\n\nexport const BagProvider: React.FC<BagProviderProps> = ({ children }) => {\n  const { user } = useAuth();\n  const [userBag, setUserBag] = useState<UserBag | null>(null);\n\n  // Initialize pets from API when the provider mounts\n  useEffect(() => {\n    petService.initialize().catch((error: Error) => {\n      console.error('Failed to initialize pets:', error);\n    });\n  }, []);\n\n  // Load bag from localStorage when user changes\n  useEffect(() => {\n    if (user) {\n      const savedBag = localStorage.getItem(`userBag_${user.id}`);\n      if (savedBag) {\n        const parsedBag = JSON.parse(savedBag);\n        // Convert date strings back to Date objects\n        parsedBag.petBoxes = parsedBag.petBoxes.map((box: any) => ({\n          ...box,\n          purchaseDate: new Date(box.purchaseDate)\n        }));\n        setUserBag(parsedBag);\n      } else {\n        // Create new bag for user\n        setUserBag({\n          userId: user.id,\n          petBoxes: [],\n          pets: []\n        });\n      }\n    } else {\n      setUserBag(null);\n    }\n  }, [user]);\n\n  // Save bag to localStorage whenever it changes\n  useEffect(() => {\n    if (userBag && user) {\n      localStorage.setItem(`userBag_${user.id}`, JSON.stringify(userBag));\n    }\n  }, [userBag, user]);\n\n  const addPetBoxes = (productId: string, productName: string, quantity: number) => {\n    if (!userBag) return;\n\n    const newBoxes: PetBox[] = [];\n    for (let i = 0; i < quantity; i++) {\n      newBoxes.push({\n        id: `${productId}_${Date.now()}_${i}`,\n        productId,\n        productName,\n        purchaseDate: new Date(),\n        isOpened: false\n      });\n    }\n\n    setUserBag(prev => prev ? {\n      ...prev,\n      petBoxes: [...prev.petBoxes, ...newBoxes]\n    } : null);\n  };\n\n  const openPetBox = async (boxId: string): Promise<Pet> => {\n    if (!userBag) {\n      throw new Error('No bag found');\n    }\n\n    const box = userBag.petBoxes.find(b => b.id === boxId);\n    if (!box) {\n      throw new Error('Box not found');\n    }\n\n    if (box.isOpened) {\n      throw new Error('Box already opened');\n    }\n\n    // Get a random pet\n    const randomPets = petService.getRandomPets(1);\n    const pet = randomPets[0];\n\n    // Update the bag\n    const updatedBag: UserBag = {\n      ...userBag,\n      petBoxes: userBag.petBoxes.map(b => \n        b.id === boxId \n          ? { ...b, isOpened: true, openedAt: new Date() }\n          : b\n      ),\n      pets: [...userBag.pets, pet]\n    };\n\n    setUserBag(updatedBag);\n    localStorage.setItem(`userBag_${user?.id}`, JSON.stringify(updatedBag));\n\n    return pet;\n  };\n\n  const getRandomPet = (): Pet => {\n    const randomPets = petService.getRandomPets(1);\n    return randomPets[0];\n  };\n\n  const addPetToCollection = (pet: Pet, boxId: string) => {\n    if (!userBag) {\n      throw new Error('No bag found');\n    }\n\n    const updatedBag: UserBag = {\n      ...userBag,\n      petBoxes: userBag.petBoxes.map(b => \n        b.id === boxId \n          ? { ...b, isOpened: true, openedAt: new Date() }\n          : b\n      ),\n      pets: [...userBag.pets, pet]\n    };\n\n    setUserBag(updatedBag);\n    localStorage.setItem(`userBag_${user?.id}`, JSON.stringify(updatedBag));\n  };\n\n  const getUnopenedBoxes = (): PetBox[] => {\n    return userBag?.petBoxes.filter(box => !box.isOpened) || [];\n  };\n\n  const getOpenedBoxes = (): PetBox[] => {\n    return userBag?.petBoxes.filter(box => box.isOpened) || [];\n  };\n\n  const getAllPets = (): Pet[] => {\n    return userBag?.pets || [];\n  };\n\n  const clearBag = () => {\n    setUserBag(null);\n    if (user) {\n      localStorage.removeItem(`userBag_${user.id}`);\n    }\n  };\n\n  const value = {\n    userBag,\n    addPetBoxes,\n    openPetBox,\n    getRandomPet,\n    addPetToCollection,\n    getUnopenedBoxes,\n    getOpenedBoxes,\n    getAllPets,\n    clearBag\n  };\n\n  return (\n    <BagContext.Provider value={value}>\n      {children}\n    </BagContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}